version: '1.0'

services:
  mysql:
    container_name: shoe_seller_agent_mysql  # Added container name for clarity
    image: mysql:8.0.36
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - ./mysql_data:/var/lib/mysql

  app:
    container_name: shoe_seller_agent_app  # Added container name for clarity
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - mysql
      - mailhog
    environment:
      # APP
      GEMINI_API_KEY: ${GEMINI_API_KEY}

      # MYSQL
      MYSQL_HOST: mysql
      MYSQL_PORT: ${MYSQL_PORT}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}

      # JWT
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}

      # MailHog SMTP
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_USER: ''
      MAIL_PASS: ''

    volumes:
      - ./src:/usr/src/app/src
      - ./test:/usr/src/app/test
      - ./public:/usr/src/app/public
      - .env:/usr/src/app/.env
      - ./tsconfig.json:/usr/src/app/tsconfig.json
      - ./package.json:/usr/src/app/package.json
      - ./package-lock.json:/usr/src/app/package-lock.json
      - ./node_modules:/usr/src/app/node_modules

  mailhog:
    container_name: shoe_seller_agent_mailhog  # Added container name for clarity
    image: mailhog/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"